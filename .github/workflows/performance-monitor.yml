name: Build Performance Monitor

on:
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed
  schedule:
    # Run daily at 6 AM UTC to monitor trends
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  performance-analysis:
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Analyze build performance
      run: |
        echo "=== Build Performance Analysis ==="
        echo "Workflow Run ID: ${{ github.event.workflow_run.id }}"
        echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
        echo "Created at: ${{ github.event.workflow_run.created_at }}"
        echo "Updated at: ${{ github.event.workflow_run.updated_at }}"
        
        # Calculate duration if available
        if [ "${{ github.event.workflow_run.created_at }}" != "" ] && [ "${{ github.event.workflow_run.updated_at }}" != "" ]; then
          start_time=$(date -d "${{ github.event.workflow_run.created_at }}" +%s)
          end_time=$(date -d "${{ github.event.workflow_run.updated_at }}" +%s)
          duration=$((end_time - start_time))
          duration_minutes=$((duration / 60))
          echo "Build duration: ${duration_minutes} minutes (${duration} seconds)"
          
          # Performance thresholds
          if [ $duration_minutes -gt 15 ]; then
            echo "‚ö†Ô∏è WARNING: Build took longer than 15 minutes"
          elif [ $duration_minutes -gt 10 ]; then
            echo "‚ö° NOTICE: Build took longer than 10 minutes"
          else
            echo "‚úÖ Good: Build completed within acceptable time"
          fi
        fi
        
    - name: Check for common issues
      run: |
        echo "=== Checking for Common Build Issues ==="
        
        # Check if large packages are causing issues
        echo "Checking for large package download patterns..."
        
        # Create performance recommendations
        cat << 'EOF' > performance-recommendations.md
        # Build Performance Recommendations
        
        ## Current Status
        - Build completed at: $(date)
        - Workflow: ${{ github.event.workflow_run.name }}
        
        ## Performance Tips
        1. **NuGet Cache**: Ensure packages are cached properly
        2. **Parallel Restore**: Use --disable-parallel:false
        3. **Package Lock Files**: Use packages.lock.json for reproducibility
        4. **Timeout Settings**: Increase timeout for large packages
        
        ## Monitoring Points
        - [ ] EmguCV packages download time
        - [ ] MaterialDesign packages download time
        - [ ] Total restore duration
        - [ ] Build compilation time
        - [ ] Test execution time
        
        ## Alerts
        - Build time > 15 minutes: ‚ö†Ô∏è Review needed
        - Build time > 20 minutes: üö® Action required
        - Restore failures: üî• Immediate attention
        EOF
        
    - name: Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: performance-report-${{ github.run_id }}
        path: performance-recommendations.md
        retention-days: 30
        
    - name: Create issue on performance degradation
      if: github.event.workflow_run.conclusion == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'üö® Build Performance Issue Detected',
            body: `
            ## Build Performance Alert
            
            **Workflow Run:** [${{ github.event.workflow_run.id }}](${{ github.event.workflow_run.html_url }})
            **Status:** ${{ github.event.workflow_run.conclusion }}
            **Branch:** ${{ github.event.workflow_run.head_branch }}
            **Commit:** ${{ github.event.workflow_run.head_sha }}
            
            ## Recommended Actions
            1. Check NuGet restore logs for timeout issues
            2. Verify cache configuration is working
            3. Review large package dependencies
            4. Consider package optimization strategies
            
            ## Auto-generated by Performance Monitor
            This issue was automatically created due to build performance concerns.
            `,
            labels: ['bug', 'performance', 'ci/cd']
          });
          console.log('Created issue:', issue.data.number);

  package-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Analyze package dependencies
      run: |
        echo "=== Package Dependency Analysis ==="
        
        # Analyze project files for large packages
        echo "Checking for large package dependencies..."
        
        # EmguCV packages
        if grep -q "Emgu.CV" src/MedicalLabAnalyzer/MedicalLabAnalyzer.csproj; then
          echo "üì¶ EmguCV detected - Large computer vision package"
          echo "  - Expected download: ~500MB"
          echo "  - Recommendation: Use specific runtime targets"
        fi
        
        # MaterialDesign packages
        if grep -q "MaterialDesignThemes" src/MedicalLabAnalyzer/MedicalLabAnalyzer.csproj; then
          echo "üé® MaterialDesignThemes detected - UI framework package"
          echo "  - Expected download: ~50MB"
          echo "  - Recommendation: Exclude unnecessary content files"
        fi
        
        # Count total package references
        package_count=$(grep -c "PackageReference" src/MedicalLabAnalyzer/MedicalLabAnalyzer.csproj || echo 0)
        echo "üìä Total package references: $package_count"
        
        if [ $package_count -gt 20 ]; then
          echo "‚ö†Ô∏è High package count detected"
          echo "  - Consider package consolidation"
          echo "  - Review unused dependencies"
        fi
        
    - name: Generate package optimization report
      run: |
        cat << 'EOF' > package-optimization.md
        # Package Optimization Report
        
        Generated: $(date)
        
        ## Large Packages Identified
        - EmguCV: Computer vision library (~500MB)
        - MaterialDesignThemes: UI framework (~50MB)
        - EPPlus: Excel processing (~20MB)
        
        ## Optimization Strategies
        1. **Runtime Targeting**: Use specific runtime identifiers
        2. **Content Exclusion**: Exclude unnecessary content files
        3. **Package Consolidation**: Remove duplicate dependencies
        4. **Version Pinning**: Use package lock files
        
        ## Monitoring Recommendations
        - Track download times for large packages
        - Monitor cache hit ratios
        - Alert on restore timeouts
        - Review dependency updates regularly
        EOF
        
    - name: Upload package report
      uses: actions/upload-artifact@v4
      with:
        name: package-optimization-report-${{ github.run_id }}
        path: package-optimization.md
        retention-days: 30